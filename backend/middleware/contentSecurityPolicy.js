const contentSecurityPolicy = (req, res, next) => {
  const cspConfig = {
    directives: {
      defaultSrc: ["'self'"], // Default policy for content sourcing
      scriptSrc: ["'self'", "'unsafe-inline'", "'unsafe-eval'", "https://trusted.cdn.com"], // Only allow scripts from these sources
      styleSrc: ["'self'", "'unsafe-inline'", "https://trusted.cdn.com"], // Allowed CSS sources
      imgSrc: ["'self'", "data:", "https://trusted.cdn.com"], // Allowed image sources
      connectSrc: ["'self'", "http://localhost:3000"], // Where to connect for API calls
      fontSrc: ["'self'", "https://trusted.cdn.com"], // Where to load fonts from
      frameSrc: ["'none'"], // Prevent loading iframes
      objectSrc: ["'none'"], // Prevent Flash/other plugins
      baseUri: ["'self'"], // Restrict base URI for scripts
      upgradeInsecureRequests: [], // Automatically upgrade HTTP resources to HTTPS
    },
  };

  // Apply the Content-Security-Policy header
  res.setHeader("Content-Security-Policy", `default-src ${cspConfig.directives.defaultSrc.join(' ')}; script-src ${cspConfig.directives.scriptSrc.join(' ')}; style-src ${cspConfig.directives.styleSrc.join(' ')}; img-src ${cspConfig.directives.imgSrc.join(' ')}; connect-src ${cspConfig.directives.connectSrc.join(' ')}; font-src ${cspConfig.directives.fontSrc.join(' ')}; frame-src ${cspConfig.directives.frameSrc.join(' ')}; object-src ${cspConfig.directives.objectSrc.join(' ')}; base-uri ${cspConfig.directives.baseUri.join(' ')}; upgrade-insecure-requests`);

  next();
};

export default contentSecurityPolicy;
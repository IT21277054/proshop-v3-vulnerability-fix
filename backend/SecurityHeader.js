import helmet from 'helmet';

// Function to set up common security headers
const setSecurityHeaders = (app) => {
  // Helmet helps secure the app by setting various HTTP headers
  app.use(
    helmet({
      contentSecurityPolicy: {
        directives: {
          defaultSrc: ["'self'"],
        },
      },
    })
  );

  // Set Strict-Transport-Security header (HSTS)
  app.use((req, res, next) => {
    res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');
    next();
  });

  // Prevent MIME type sniffing (X-Content-Type-Options)
  app.use((req, res, next) => {
    res.setHeader('X-Content-Type-Options', 'nosniff');
    next();
  });

  // Prevent Clickjacking (X-Frame-Options)
  app.use((req, res, next) => {
    res.setHeader('X-Frame-Options', 'DENY');
    next();
  });

  // Prevent Cross-Domain Misconfiguration using CORS (Cross-Origin Resource Sharing)
  app.use((req, res, next) => {
    res.setHeader('Access-Control-Allow-Origin', 'http://localhost:3000');
    next();
  });

  // Hide Unix timestamp and private IP disclosure (via custom handling if necessary)
  app.use((req, res, next) => {
    // Any custom logic to prevent sensitive information disclosure (optional)
    next();
  });

  // Remove X-Powered-By header to hide the technology stack
  app.use((req, res, next) => {
    res.removeHeader('X-Powered-By');
    next();
  });
};
export default setSecurityHeaders;